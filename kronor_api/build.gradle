plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id("com.apollographql.apollo3").version("3.7.3")
    id 'maven-publish'
}

publishing {
    publications {
        release(MavenPublication) {
            groupId 'io.kronor.api'
            artifactId 'kronor_api'
            version '1.0'

            afterEvaluate {
                from components.release
            }

            pom {
                description = 'Kronor API.'
            }
        }
    }
    repositories {
        maven {
            name = "myrepo"
            url = "${project.buildDir}/repo"
        }
    }
}

android {
    namespace 'io.kronor.api'
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        versionCode 1
        versionName "1.0"

        aarMetadata {
            minCompileSdk = 21
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

apollo {
    service("service") {
        packageName.set("io.kronor.api")
        mapScalarToKotlinString("bigint")
        mapScalarToKotlinString("uuid")
        mapScalar("timestamptz", "java.util.Date", "com.apollographql.apollo3.adapter.DateAdapter")
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation("com.apollographql.apollo3:apollo-runtime:3.7.3")
    implementation("com.apollographql.apollo3:apollo-adapters:3.7.3")

}