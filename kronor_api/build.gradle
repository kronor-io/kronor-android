plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id("com.apollographql.apollo3").version("3.7.3")
    id 'maven-publish'
    id 'signing'
}

publishing {
    publications {
        release(MavenPublication) {
            groupId 'io.kronor'
            artifactId 'api'
            version '1.1'

            afterEvaluate {
                from components.release
            }

            pom {
                name = 'api'
                url = 'https://github.com/kronor-io/kronor-android'
                description = 'Kronor API component for Kronor SDK'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/kronor-io/kronor-android/blob/main/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'iAmMrinal0'
                        name = 'Mrinal Purohit'
                        email = 'mrinal@kronor.io'
                    }
                    developer {
                        id = 'pranaysashank'
                        name = 'Pranay Sashank'
                        email = 'pranay.sashank@kronor.io'
                    }
                }
                scm {
                    connection = 'scm:git:github.com/kronor-io/kronor-android.git'
                    developerConnection = 'scm:git:ssh://github.com/kronor-io/kronor-android.git'
                    url = 'https://github.com/kronor-io/kronor-android/tree/main'
                }
            }
        }
    }
}

android {
    namespace 'io.kronor.api'
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        aarMetadata {
            minCompileSdk = 21
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

apollo {
    service("service") {
        packageName.set("io.kronor.api")
        mapScalarToKotlinString("bigint")
        mapScalarToKotlinString("uuid")
        mapScalar("timestamptz", "java.util.Date", "com.apollographql.apollo3.adapter.DateAdapter")
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation("com.apollographql.apollo3:apollo-runtime:3.7.3")
    implementation("com.apollographql.apollo3:apollo-adapters:3.7.3")

}

apply from: "${rootProject.projectDir}/scripts/publish-module.gradle"